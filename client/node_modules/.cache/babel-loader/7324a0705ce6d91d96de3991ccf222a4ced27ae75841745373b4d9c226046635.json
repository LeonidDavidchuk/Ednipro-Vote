{"ast":null,"code":"var _jsxFileName = \"/Users/leoniddavidchuk/Desktop/projects_practice/Ednipro-Vote/client/src/components/picture/Picture.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Picture.css\";\nimport card1 from \"./images/card1.svg\";\nimport card2 from \"./images/card2.svg\";\nimport card3 from \"./images/card3.svg\";\nimport card4 from \"./images/card4.svg\";\nimport heart from \"./images/heart.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Picture() {\n  _s();\n  const [pictures, setPictures] = useState([]);\n  useEffect(() => {\n    async function fetchPictures() {\n      const response = await fetch(\"http://localhost:3000/api/picture/getAll_picture\");\n      const data = await response.json();\n      setPictures(data);\n    }\n    fetchPictures();\n    console.log(pictures);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"picture-container\",\n    children: pictures.map(picture => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face front\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cardimg\",\n          src: \"localhost:3000/api/uploads/picture1.jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face back\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttondiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"heart\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: heart,\n                alt: \"heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-back\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: picture.school\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttondiv2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button-golos\",\n                children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, picture.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Picture, \"a+6+cHN8dHNBx5bWIzL8mmqbf9E=\");\n_c = Picture;\nexport default Picture;\nvar _c;\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"names":["React","useState","useEffect","card1","card2","card3","card4","heart","jsxDEV","_jsxDEV","Picture","_s","pictures","setPictures","fetchPictures","response","fetch","data","json","console","log","className","children","map","picture","src","fileName","_jsxFileName","lineNumber","columnNumber","alt","school","id","_c","$RefreshReg$"],"sources":["/Users/leoniddavidchuk/Desktop/projects_practice/Ednipro-Vote/client/src/components/picture/Picture.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Picture.css\";\nimport card1 from \"./images/card1.svg\";\nimport card2 from \"./images/card2.svg\";\nimport card3 from \"./images/card3.svg\";\nimport card4 from \"./images/card4.svg\";\nimport heart from \"./images/heart.svg\";\n\nfunction Picture() {\n  const [pictures, setPictures] = useState([]);\n  useEffect(() => {\n    async function fetchPictures() {\n      const response = await fetch(\n        \"http://localhost:3000/api/picture/getAll_picture\"\n      );\n      const data = await response.json();\n      setPictures(data);\n    }\n\n    fetchPictures();\n    console.log(pictures);\n  }, []);\n\n  return (\n    <div className=\"picture-container\">\n      {pictures.map((picture) => (\n        <div className=\"card\" key={picture.id}>\n          <div className=\"face front\">\n            <img\n              className=\"cardimg\"\n              src=\"localhost:3000/api/uploads/picture1.jpeg\"\n            />\n            <div className=\"face back\">\n              <div className=\"buttondiv\">\n                <div className=\"heart\">\n                  <img src={heart} alt=\"heart\" />\n                </div>\n                <div className=\"text-back\">\n                  <p>{picture.school}</p>\n                </div>\n                <div className=\"buttondiv2\">\n                  <button className=\"button-golos\">Проголосувати</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Picture;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}